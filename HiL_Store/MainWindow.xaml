<Window x:Name="window" x:Class="HiL_Store.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:controls="clr-namespace:HiL_Store.Views"
        xmlns:viewmodels="clr-namesoace:HiL_Store.Views"
        
        mc:Ignorable="d"
        Title="MainWindow" Height="750" Width="1000" Background="Transparent" AllowsTransparency="True" WindowStyle="None" ResizeMode="NoResize">

    <Window.Resources>
        <ResourceDictionary>
          

            <Style x:Key="TitleText" TargetType="{x:Type TextBlock}">
                <Setter Property="Foreground" Value="#C2C3C3"/>
                <Setter Property="FontSize" Value="10"/>
                <Setter Property="FontWeight" Value="SemiBold"/>
                <Setter Property="FontFamily" Value="Lucida Sans Unicode"/>
            </Style>

            <Style x:Key="MainText" TargetType="{x:Type TextBlock}">
                <Setter Property="Foreground" Value="Black"/>
                <Setter Property="HorizontalAlignment" Value="Left"/>
                <Setter Property="VerticalAlignment" Value="Center"/>
                <Setter Property="FontSize" Value="12"/>
                <Setter Property="FontWeight" Value="Normal"/>
                <Setter Property="FontFamily" Value="Segoe UI Semibold"/>
                <Setter Property="Margin" Value="11,0"/>
            </Style>

            <!--Drop shadow effect (optional)-->
            <DropShadowBitmapEffect x:Key="DropShadowButton" Softness="2" ShadowDepth="5" Color="LightGray" Direction="260"/>
            <Style x:Key="PrimaryButton" TargetType="{x:Type Button}">
                <Setter Property="BitmapEffect" Value="{StaticResource DropShadowButton}"/>
                <Setter Property="Background" Value="#6D78CB"/>
                <Setter Property="Foreground" Value="White"/>
                <Setter Property="Width" Value="174"/>
                <Setter Property="Height" Value="36"/>
                <Setter Property="HorizontalContentAlignment" Value="Center"/>
                <Setter Property="VerticalAlignment" Value="Center"/>
                <Setter Property="FontSize" Value="10"/>
                <Setter Property="FontWeight" Value="Bold"/>
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type Button}">
                            <Border CornerRadius="20" Background="{TemplateBinding Background}" BorderThickness="{TemplateBinding BorderThickness}">
                                <ContentPresenter HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                            </Border>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>

            <Style x:Key="SecondaryButton" TargetType="{x:Type Button}">
                <Setter Property="Background" Value="Transparent"/>
                <Setter Property="Foreground" Value="#C2C3C3"/>
                <Setter Property="BorderThickness" Value="1"/>
                <Setter Property="BorderBrush" Value="#C2C3C3"/>
                <Setter Property="Width" Value="80"/>
                <Setter Property="Height" Value="27"/>
                <Setter Property="HorizontalContentAlignment" Value="Center"/>
                <Setter Property="VerticalAlignment" Value="Center"/>
                <Setter Property="FontSize" Value="10"/>
                <Setter Property="FontWeight" Value="Bold"/>
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type Button}">
                            <Border CornerRadius="12" Background="{TemplateBinding Background}" BorderThickness="{TemplateBinding BorderThickness}" BorderBrush="{TemplateBinding BorderBrush}">
                                <ContentPresenter HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                            </Border>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>

            <!--Search Button Style-->
            <!--Since the properties from Primary button has been inherited already when we used "BasedOn"-->
            <Style x:Key="SearchButton" TargetType="{x:Type Button}" BasedOn="{StaticResource PrimaryButton}">
                <Setter Property="BorderThickness" Value="0"/>
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type Button}">
                            <Border CornerRadius="18" Background="{TemplateBinding Background}" BorderThickness="{TemplateBinding BorderThickness}" BorderBrush="{TemplateBinding BorderBrush}">
                                <Path Data="{DynamicResource Search}" Fill="White" Width="15" Stretch="Uniform"/>
                            </Border>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>
            <Storyboard x:Key="UpD"/>
            <Storyboard x:Key="UPD">
                <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[3].(TranslateTransform.Y)" Storyboard.TargetName="image">
                    <EasingDoubleKeyFrame KeyTime="0" Value="0"/>
                    <EasingDoubleKeyFrame KeyTime="0:0:0.2" Value="-141.795"/>
                    <EasingDoubleKeyFrame KeyTime="0:0:0.4" Value="-207.966"/>
                    <EasingDoubleKeyFrame KeyTime="0:0:0.6" Value="-207.966"/>
                    <EasingDoubleKeyFrame KeyTime="0:0:0.8" Value="-207.966"/>
                    <EasingDoubleKeyFrame KeyTime="0:0:1" Value="-207.966"/>
                    <EasingDoubleKeyFrame KeyTime="0:0:1.2" Value="-207.966"/>
                    <EasingDoubleKeyFrame KeyTime="0:0:1.4" Value="-207.966"/>
                    <EasingDoubleKeyFrame KeyTime="0:0:1.6" Value="-207.966"/>
                    <EasingDoubleKeyFrame KeyTime="0:0:1.8" Value="-207.966"/>
                    <EasingDoubleKeyFrame KeyTime="0:0:2.6" Value="-207.966"/>
                    <EasingDoubleKeyFrame KeyTime="0:0:3.7" Value="-207.966"/>
                    <EasingDoubleKeyFrame KeyTime="0:0:3.8" Value="-113.436"/>
                    <EasingDoubleKeyFrame KeyTime="0:0:4" Value="15.755"/>
                    <EasingDoubleKeyFrame KeyTime="0:0:4.2" Value="15.755"/>
                </DoubleAnimationUsingKeyFrames>
            </Storyboard>

        </ResourceDictionary>
    </Window.Resources>



    <Border CornerRadius="20">

        <Grid x:Name="Window"  Background="Black">

            <Grid>
                <Grid.Style>
                    <Style TargetType="Grid">
                        <Style.Triggers>
                            <DataTrigger Binding="{Binding IsLoggedIn}" Value="False">
                                <Setter Property="Visibility" Value="Hidden"/>
                            </DataTrigger>
                        </Style.Triggers>
                    </Style>
                </Grid.Style>
                
                <controls:UserView />
            </Grid>

            <ScrollViewer Grid.Row="1" VerticalScrollBarVisibility="Auto" HorizontalScrollBarVisibility="Disabled">
                <ContentControl Content="{Binding CurrentViewModel}"/>
            </ScrollViewer>

        </Grid>
        
    </Border>
    
</Window>
